continue
eventsList1
next
continue
eventsList1
next
continue
Event.where("classroom_id IN ("+studentIds.to_s+")")
Event.where("classroom_id IN ("+studentIds+")")
studentIds
continue
Event.where("classroom_id IN (2,3)")
eventsList1
next
continue
eventsList1
next
continue
e.message
next
continue
@classesEnrolled[0]
@activities[0]
@activities
continue
@teacherList
@classesEnrolled
continue
@studentClassDetails[0].classroom.school_user
@studentClassDetails[0].classroom
@studentClassDetails[0].classrooms
@studentClassDetails[0].school_user
@studentClassDetails[0]
next
continue
@studentClassDetails[0]
next
continue
@studentClassDetails[0]
next
continue
@studentClassDetails[0]
@studentClassDetails
next
continue
@studentClassDetails[0]
@studentClassDetails[0].school_user
next
continue
@studentClassDetails[0].school_user
@studentClassDetails
next
continue
@studentClassDetails
@studentClassDetails[0].school_user
next
continue
@studentClassDetails[0].school_user
@studentClassDetails[0]
next
continue
@studentClassDetails[0]
next
continue
@studentClassDetails[0]
@studentClassDetails
next
continue
@studentClassDetails[0].classroom
@studentClassDetails.classroom
@studentClassDetails
next@studentClassDetails
next
continue
params[:student_id].to_i
params[:student_id]
next
continue
continu
params[:student_id]
e.message
next
params[:student_id]
next
exit
params[:student_id]
e.message
next
continue
next
exit
params["parent"]["id"]
params["parent"]
params[:id]
continue
next
continue
next
continue
next
continue
next
continue
next
continue
next
continue
e.message
next
@result
next
continue
@result
next
continue
value
next
continue
next
continue
next
continue
next
continue
e.message
next
continue
e.message
next
e.message
continue
e.message
next
continue
e.message
next
continue
e.message
next
notification
nextnotification
next
continue
pusher
next
continue
next
exit
params[:student_id]
exit
params[:student_id]
exit
params[:student_id]
exit
params[:student_id]
continue
exit
@student
continue
@students
continue
@students
@studentParentData
next
continue
@studentParentData[1]
@studentParentData[0]
@studentParentData
next
continue
@students[0]
@students
@students.insert(0, registration.student.parent)
@students.length
next
continue
@students
next
continue
registration.student.parent
registration.student
continue
@students[:parents]
@students.parents
@students.parent
continue
@students[0].parent
@students[0]
@students
continue
@students[0]
@students
continue
@students
next
exit
@registrations[].student
@registrations
@registrations.student
@registrations = ClassRegistration.includes(:student).where("classroom_id = 2")
@registrations = ClassRegistration.includes(:student).where("classroom_id = 2").select(:students)
@registrations = ClassRegistration.includes(:student).where("classroom_id = 2").select(:student)
@registrations = ClassRegistration.includes(:student).where("classroom_id = 2").select(;student)
@registrations = ClassRegistration.includes(:student).where("classroom_id = 2").select("student")
@registrations = ClassRegistration.includes(:student).where("classroom_id = 2").select("students")
@registrations = ClassRegistration.includes(:student).where("classroom_id = 2").select("students.*")
@registrations = ClassRegistration.includes(:student).where("classroom_id = 2").select("student.*")
@registrations.student
@registrations.all.student
@registrations.second.student
@registrations.first.student
@registrations.students
@registrations.student
@registrations[0].student
@registrations[0]
@registrations
@registrations = ClassRegistration.includes(:student).where("classroom_id = 2")
@registrations
ClassRegistration.includes(:student).where("classroom_id = 2")
ClassRegistration.includes(:student).where("classroom_id = " + 2)
@registrations
next
continue
params[:student_id].to_i
kid["id"]
params[:student_id]
continue
next
kid
continue
kid["id"]
kid[]
kid
kid["first_name"]
@studentname
next
continue
@value
next
continue
value
next
continue
next
exit
session[:kids_list].each do |kid| if(kid.id == 3) puts "x" end  end
session[:kids_list].each do |kid| if(kid.id == 3){puts "x"} end
session[:kids_list].each do |kid| puts kid == 3 end
session[:kids_list].each do |kid| puts kid.id == 3 end
session[:kids_list]
session[:kids_list].each {|key, value| id = 3}
session[:kids_list].each {|key, value| "id" = 3}
session[:kids_list].each {|key, value| "id" == 3}
session[:kids_list].each {|key, value| id == 3}
session[:kids_list].each { select "id"}
session[:kids_list].each { puts "id"}
